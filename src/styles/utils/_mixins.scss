@use 'sass:map';
@use 'sass:list';

// Screen breakpoints for responsive design
$breakpoints: (
  "phone": 700px,
  "tablet": 950px,
  xs: 320px,
  sm: 576px,
  md: 768px,
  lg: 1024px,
  xl: 1440px
);

$directions: (
  "top": "-top",
  "bottom": "-bottom",
  "left": "-left",
  "right": "-right",
  "": ""
);

@mixin respond-max($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints.";
  }
}

@mixin respond-min($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints.";
  }
}

// Essential styles for designs
@mixin border-stroke($val, $clr: black, $direction: '') {
  // Check for valid direction
  @if not map.has-key($directions, $direction) {
    @error "Property `#{$direction}` must be top, right, bottom, left, or empty.";
  }

  // Check for valid border weight
  @if not list.index(light medium heavy none, $val) {
    @error "Property `#{$val}` must be light, medium, heavy, or none.";
  }

  $border-dir: map.get($directions, $direction);

  @if $val == light {
    border#{$border-dir}: 1px solid $clr;
  } @else if $val == medium {
    border#{$border-dir}: 3px solid $clr;
  } @else if $val == heavy {
    border#{$border-dir}: 6px solid $clr;
  } @else if $val == none {
    border#{$border-dir}: none;
  }
}

@mixin text-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin button-reset {
    padding: 0;
    color: inherit;
    font: inherit;
    border: none;
    cursor: pointer;
    background: none;
}


// Mixins for placements
@mixin flex-center($gap: 0) {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: #{$gap}px;
}

@mixin flex-center-column($gap: 0) {
    display: flex;
    justify-content: center;
    gap: #{$gap}px;
}

@mixin flex-center-row($gap: 0) {
    display: flex;
    align-items: center;
    gap: #{$gap}px;
}

@mixin grid-center {
    display: grid;
    place-content: center;
}
